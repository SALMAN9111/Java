<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;assignments&apos;&#x0D;&#x0A;- Original project: &apos;assignments&apos;&#x0D;&#x0A;- Original element: &apos;com.monocept.test.InterfaceExtendableTest.java&apos;" description="Delete element" element1="/src&lt;com.monocept.test{InterfaceExtendableTest.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1631117059285" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;assignments&apos;&#x0D;&#x0A;- Original project: &apos;assignments&apos;&#x0D;&#x0A;- Original element: &apos;com.monocept.test.A.java&apos;" description="Delete element" element1="/src&lt;com.monocept.test{A.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1631117071560" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;assignments&apos;&#x0D;&#x0A;- Original project: &apos;assignments&apos;&#x0D;&#x0A;- Original element: &apos;com.monocept.test.B.java&apos;" description="Delete element" element1="/src&lt;com.monocept.test{B.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1631117098489" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;assignments&apos;&#x0D;&#x0A;- Original project: &apos;assignments&apos;&#x0D;&#x0A;- Original element: &apos;com.monocept.test.C.java&apos;" description="Delete element" element1="/src&lt;com.monocept.test{C.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1631117108018" subPackages="false" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;assignments&apos;&#x0D;&#x0A;- Original project: &apos;assignments&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.monocept.test.WithoutNewKeywordTest.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.monocept.test{WithoutNewKeywordTest.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1631119116924" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;com.monocept.test.DisplalyName&apos; to &apos;DisplayName&apos;&#x0D;&#x0A;- Original project: &apos;assignments&apos;&#x0D;&#x0A;- Original element: &apos;com.monocept.test.DisplalyName&apos;&#x0D;&#x0A;- Renamed element: &apos;com.monocept.test.DisplayName&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;DisplalyName&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;com.monocept.test{DisplalyName.java[DisplalyName" matchStrategy="1" name="DisplayName" qualified="false" references="true" similarDeclarations="false" stamp="1631153429166" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;com.monocept.test.DisplayName.display()&apos; to &apos;displayName&apos;&#x0D;&#x0A;- Original project: &apos;assignments&apos;&#x0D;&#x0A;- Original element: &apos;com.monocept.test.DisplayName.display()&apos;&#x0D;&#x0A;- Renamed element: &apos;com.monocept.test.DisplayName.displayName()&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;display&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;com.monocept.test{DisplayName.java[DisplayName~display" name="displayName" references="true" stamp="1631154436635" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static void WithoutApplyingRule1()&apos; from &apos;com.monocept.test.CalesthenicRule1Test.main()&apos; to &apos;com.monocept.test.CalesthenicRule1Test&apos;&#x0D;&#x0A;- Original project: &apos;assignments&apos;&#x0D;&#x0A;- Method name: &apos;WithoutApplyingRule1&apos;&#x0D;&#x0A;- Destination type: &apos;com.monocept.test.CalesthenicRule1Test&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;WithoutApplyingRule1&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.monocept.test{CalesthenicRule1Test.java" name="WithoutApplyingRule1" replace="false" selection="112 204" stamp="1631154701693" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void WithoutApplyingRule3()&apos; from &apos;com.monocept.test.CalesthenicRulesTest.main()&apos; to &apos;com.monocept.test.CalesthenicRulesTest&apos;&#x0D;&#x0A;- Original project: &apos;assignments&apos;&#x0D;&#x0A;- Method name: &apos;WithoutApplyingRule3&apos;&#x0D;&#x0A;- Destination type: &apos;com.monocept.test.CalesthenicRulesTest&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;WithoutApplyingRule3&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.monocept.test{CalesthenicRulesTest.java" name="WithoutApplyingRule3" replace="false" selection="296 117" stamp="1631155569545" version="1.0" visibility="2"/>
</session>